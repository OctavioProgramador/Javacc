options {
	STATIC = false;
}
PARSER_BEGIN(lexico)
	import java.io.PrintStream;
	class lexico {
		public static void main (String [] args)
		throws ParseException, TokenMgrError{
			lexico parser = new lexico( System.in);
			parser.Start(System.out); }
	}
PARSER_END(lexico)
SKIP : { "\t"| "\r" | "\r\n" | "\n" | " "}
TOKEN: { <EQ: "==">  }
TOKEN: {<Asignacion: "=">}
TOKEN : { <DF: "!="> }
TOKEN : { <MYR: ">"> }
TOKEN : { <MNR: "<"> }
TOKEN : {<MYI: "=>"> }
TOKEN : { <MEI: "<="> }
TOKEN: { <PI: "("> }
TOKEN : {<PD: ")">}
TOKEN: { <CI: "[" > }
TOKEN : { <CD: "]" > }
TOKEN:{ <COM1: "/*"> }
TOKEN : { <COM2: "*/"> }
TOKEN : { <COM3: "//"> }
TOKEN: { <INCR :"++"> }
TOKEN : { <DECR: "--"> }
TOKEN : { < OperadorAritmeticoBinario :  "+" | "-" | "*" | "/" | "*=" | "+=" | "-=" | "*=" | "/=" > } 
TOKEN : { < FuncionMatematica : "sqrt" > }
TOKEN : { < OperadoresLogicos : "&&" | "||" | "XOR" > }
TOKEN : { < Llaves : "{" | "}" > }
TOKEN : { < ReferenciasPunteros : "this" | "&" > }
TOKEN : { < NUMBER : (["0"-"9"])+ > }
TOKEN : { < #WORDMIN : (["a"-"z"])+>}
TOKEN : { < #WORDMAYUS : (["A"-"Z"])+>}
TOKEN : { < #WORD : (<WORDMIN>|<WORDMAYUS>)+ > } 
TOKEN : { < #SPECIAL : "_" | "@" | "." > }
TOKEN : { < IDENTIFIER : (<WORD>)+(<NUMBER>|<NUMBER>|<SPECIAL>)* > }


void Start(PrintStream printStream) throws NumberFormatException:
{
	Token t;
}

{
	(
		
			t = <IDENTIFIER>
			{printStream.println("Identificador ("+t.beginLine+", "+t.beginColumn+")");}
			|
			t = <NUMBER>
			{printStream.println("Numero ("+t.beginLine+", "+t.beginColumn+")");}
			| 
			t = <Asignacion>
			{printStream.println("Asignacion");}
			|		
			t = <OperadorAritmeticoBinario> 
			{printStream.println("OperadorAritmeticoBinario ("+t.image+")");}
			|
			t = <OperadoresLogicos> 
			{printStream.println("OperadoresLogicos ("+t.image+")");}
			|
			t = <FuncionMatematica> 
			{printStream.println("FuncionMatematica ("+t.image+")");}
			|
			t = <Llaves> 
			{printStream.println("Llaves ("+t.image+")");}
			|
			t = <ReferenciasPunteros> 
			{printStream.println("ReferenciasPunteros ("+t.image+")");}
			|	
			 <EQ> 
			{printStream.println("EQ");}
			|
			<DF> 
			{printStream.println("DF"); }
			|
			 <MYR> 
			{printStream.println("MYR"); }
			|
			<MNR> 
			{printStream.println("MNR"); }
			|
			<MYI> 
			{printStream.println("MYI"); }
			|
			<MEI> 
			{printStream.println("MEI"); }
			|
			<PI> 
			{printStream.println("PI"); }
			|
			<PD> 
			{printStream.println("PD"); }
			|
			<CI> 
			{printStream.println("CI"); }
			|
			<CD> 
			{printStream.println("CD"); }
			|
			<COM1> 
			{printStream.println("COM1"); }
			|
			<COM2> 
			{printStream.println("COM2"); }
			|
			<COM3> 
			{printStream.println("COM3"); }
			|
			<INCR> 
			{printStream.println("INCR"); }
			|
			<DECR> 
			{printStream.println("DECR"); }
			
	)*	
	<EOF>
}

