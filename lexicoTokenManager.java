/* Generated By:JavaCC: Do not edit this line. lexicoTokenManager.java */
import java.io.PrintStream;
import java.util.ArrayList;

/** Token Manager. */
public class lexicoTokenManager implements lexicoConstants
{

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1)
{
   switch (pos)
   {
      case 0:
         if ((active1 & 0xc0000L) != 0L)
         {
            jjmatchedKind = 95;
            return 93;
         }
         if ((active0 & 0x2000000000L) != 0L || (active1 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 95;
            return 57;
         }
         if ((active0 & 0x8000000000000000L) != 0L || (active1 & 0x419L) != 0L)
         {
            jjmatchedKind = 95;
            return 197;
         }
         if ((active0 & 0x1000000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            return 381;
         }
         if ((active0 & 0x300000000008000L) != 0L || (active1 & 0x8005000L) != 0L)
         {
            jjmatchedKind = 95;
            return 342;
         }
         if ((active0 & 0x400180000000000L) != 0L || (active1 & 0x142L) != 0L)
         {
            jjmatchedKind = 95;
            return 166;
         }
         if ((active0 & 0x100L) != 0L)
            return 79;
         if ((active0 & 0x800000000000000L) != 0L || (active1 & 0x220000L) != 0L)
         {
            jjmatchedKind = 95;
            return 422;
         }
         if ((active0 & 0x2002001000000000L) != 0L)
         {
            jjmatchedKind = 95;
            return 484;
         }
         if ((active0 & 0x40000100000000L) != 0L || (active1 & 0x800L) != 0L)
         {
            jjmatchedKind = 95;
            return 414;
         }
         if ((active0 & 0x28000800000000L) != 0L || (active1 & 0xa4L) != 0L)
         {
            jjmatchedKind = 95;
            return 176;
         }
         if ((active1 & 0x108000L) != 0L)
         {
            jjmatchedKind = 95;
            return 186;
         }
         if ((active1 & 0x1402000L) != 0L)
         {
            jjmatchedKind = 95;
            return 136;
         }
         if ((active0 & 0x80000000L) != 0L || (active1 & 0x10000000L) != 0L)
         {
            jjmatchedKind = 95;
            return 444;
         }
         if ((active0 & 0x4000000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            return 324;
         }
         if ((active0 & 0x20000000000L) != 0L)
         {
            jjmatchedKind = 95;
            return 286;
         }
         if ((active0 & 0x20L) != 0L)
            return 29;
         if ((active1 & 0x800000L) != 0L)
         {
            jjmatchedKind = 95;
            return 234;
         }
         if ((active0 & 0x4000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            return 387;
         }
         if ((active1 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 95;
            return 473;
         }
         return -1;
      case 1:
         if ((active0 & 0x100000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 369;
         }
         if ((active0 & 0x800000000000000L) != 0L || (active1 & 0x20000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 421;
         }
         if ((active1 & 0x1000000L) != 0L)
         {
            jjmatchedKind = 33;
            jjmatchedPos = 1;
            return 148;
         }
         if ((active1 & 0x40L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 165;
         }
         if ((active0 & 0x4000000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 328;
         }
         if ((active0 & 0xb06a1a1000008000L) != 0L || (active1 & 0x40c09a5L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 484;
         }
         if ((active0 & 0x800000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 175;
         }
         if ((active0 & 0x80000000L) != 0L || (active1 & 0x10000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 447;
         }
         if ((active1 & 0x40000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 474;
         }
         if ((active1 & 0x8000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 485;
         }
         if ((active1 & 0x100000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 188;
         }
         if ((active0 & 0x4000000000000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 386;
         }
         if ((active1 & 0x8000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 185;
         }
         if ((active1 & 0x402000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 160;
         }
         if ((active1 & 0x418L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 202;
         }
         if ((active1 & 0x800000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 233;
         }
         if ((active0 & 0x400000000000000L) != 0L || (active1 & 0x2L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 171;
         }
         if ((active0 & 0x200000000000000L) != 0L || (active1 & 0x4000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 353;
         }
         if ((active1 & 0x200000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 432;
         }
         if ((active1 & 0x1000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 1;
            return 345;
         }
         if ((active0 & 0x2100000000L) != 0L)
            return 484;
         return -1;
      case 2:
         if ((active1 & 0x8410L) != 0L)
            return 484;
         if ((active1 & 0x402000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 2;
            }
            return 159;
         }
         if ((active1 & 0x200000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 2;
            }
            return 431;
         }
         if ((active0 & 0x200000000000000L) != 0L || (active1 & 0x4000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 2;
            }
            return 352;
         }
         if ((active1 & 0x8L) != 0L)
            return 215;
         if ((active0 & 0xfd6e1a1080008000L) != 0L || (active1 & 0x5d9e19e7L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 95;
               jjmatchedPos = 2;
            }
            return 484;
         }
         if ((active0 & 0x800000000L) != 0L)
         {
            if (jjmatchedPos != 2)
            {
               jjmatchedKind = 52;
               jjmatchedPos = 2;
            }
            return 484;
         }
         return -1;
      case 3:
         if ((active0 & 0x6020080000008000L) != 0L || (active1 & 0x40020060L) != 0L)
            return 484;
         if ((active1 & 0x400000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 3;
            return 158;
         }
         if ((active1 & 0x4000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 3;
            return 351;
         }
         if ((active0 & 0x9f4e121880000000L) != 0L || (active1 & 0x1dbc3d87L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 3;
            return 484;
         }
         return -1;
      case 4:
         if ((active0 & 0x6121000000000L) != 0L || (active1 & 0xa01000L) != 0L)
            return 484;
         if ((active0 & 0x9f48000880000000L) != 0L || (active1 & 0x1d5c6d87L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 4;
            return 484;
         }
         return -1;
      case 5:
         if ((active0 & 0x1300000080000000L) != 0L || (active1 & 0x8042d02L) != 0L)
            return 484;
         if ((active0 & 0x8c48000800000000L) != 0L || (active1 & 0x15584085L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 5;
            return 484;
         }
         return -1;
      case 6:
         if ((active0 & 0xc00000800000000L) != 0L || (active1 & 0x80080L) != 0L)
            return 484;
         if ((active0 & 0x8048000000000000L) != 0L || (active1 & 0x15504005L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 6;
            return 484;
         }
         return -1;
      case 7:
         if ((active0 & 0x40000000000000L) != 0L || (active1 & 0x14104004L) != 0L)
            return 484;
         if ((active0 & 0x8008000000000000L) != 0L || (active1 & 0x1400001L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 7;
            return 484;
         }
         return -1;
      case 8:
         if ((active0 & 0x8008000000000000L) != 0L || (active1 & 0x1L) != 0L)
            return 484;
         if ((active1 & 0x1400000L) != 0L)
         {
            jjmatchedKind = 95;
            jjmatchedPos = 8;
            return 484;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1)
{
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0()
{
   switch(curChar)
   {
      case 13:
         jjmatchedKind = 2;
         return jjMoveStringLiteralDfa1_0(0x8L, 0x0L);
      case 32:
         return jjStartNfaWithStates_0(0, 5, 29);
      case 44:
         return jjStopAtPos(0, 20);
      case 58:
         return jjStopAtPos(0, 21);
      case 59:
         return jjStopAtPos(0, 29);
      case 61:
         return jjStartNfaWithStates_0(0, 8, 79);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x2000000000L, 0x4000000L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x20000000000L, 0x0L);
      case 100:
         return jjMoveStringLiteralDfa1_0(0x8000000000000000L, 0x419L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x400180000000000L, 0x142L);
      case 102:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x800000L);
      case 103:
         return jjMoveStringLiteralDfa1_0(0x1000000000000000L, 0x0L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x1402000L);
      case 106:
         return jjMoveStringLiteralDfa1_0(0x2000000000000000L, 0x0L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x4000000000000000L, 0x0L);
      case 109:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x40000000L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x28000800000000L, 0xa4L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x40000100000000L, 0x800L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0x800000000000000L, 0x220000L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x80000000L, 0x10000000L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x300000000008000L, 0x8005000L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x0L, 0xc0000L);
      case 117:
         return jjMoveStringLiteralDfa1_0(0x4000000000000L, 0x0L);
      case 118:
         return jjMoveStringLiteralDfa1_0(0x0L, 0x108000L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x1000000000L, 0x0L);
      case 121:
         return jjMoveStringLiteralDfa1_0(0x2000000000000L, 0x0L);
      default :
         return jjMoveNfa_0(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0, long active1)
{
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, active1);
      return 1;
   }
   switch(curChar)
   {
      case 10:
         if ((active0 & 0x8L) != 0L)
            return jjStopAtPos(1, 3);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x808000000000000L, active1, 0x40028000L);
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x4000800L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x880000000L, active1, 0x18000418L);
      case 102:
         if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(1, 32, 484);
         break;
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x102000000000000L, active1, 0x800000L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x9000020000000000L, active1, 0x41L);
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x402000L);
      case 110:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000000L, active1, 0x1000000L);
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x6000000000000000L, active1, 0x1000a4L);
      case 113:
         return jjMoveStringLiteralDfa2_0(active0, 0x8000L, active1, 0x100L);
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0x200000L);
      case 115:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStartNfaWithStates_0(1, 37, 484);
         return jjMoveStringLiteralDfa2_0(active0, 0x4000000000000L, active1, 0L);
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000000000L, active1, 0x4000L);
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x20000000000000L, active1, 0x1000L);
      case 118:
         return jjMoveStringLiteralDfa2_0(active0, 0x40100000000000L, active1, 0L);
      case 120:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000000000000L, active1, 0x2L);
      case 121:
         return jjMoveStringLiteralDfa2_0(active0, 0L, active1, 0xc0000L);
      default :
         break;
   }
   return jjStartNfa_0(0, active0, active1);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(0, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, active1);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x20000000000L, active1, 0x18000000L);
      case 99:
         return jjMoveStringLiteralDfa3_0(active0, 0x4800000000000000L, active1, 0L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x42101000000000L, active1, 0L);
      case 102:
         if ((active1 & 0x8L) != 0L)
            return jjStartNfaWithStates_0(2, 67, 215);
         break;
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x2004000000000000L, active1, 0x40200040L);
      case 106:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x800L);
      case 108:
         if ((active1 & 0x10L) != 0L)
         {
            jjmatchedKind = 68;
            jjmatchedPos = 2;
         }
         return jjMoveStringLiteralDfa3_0(active0, 0x8020000000000000L, active1, 0x100481L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x8000000000000L, active1, 0L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x20L);
      case 111:
         return jjMoveStringLiteralDfa3_0(active0, 0x1000000000000000L, active1, 0L);
      case 112:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x4c3000L);
      case 114:
         if ((active1 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(2, 79, 484);
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000008000L, active1, 0x4004L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x5020000L);
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000080000000L, active1, 0x2L);
      case 117:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000000000L, active1, 0x100L);
      case 119:
         return jjMoveStringLiteralDfa3_0(active0, 0x800000000L, active1, 0L);
      case 120:
         return jjMoveStringLiteralDfa3_0(active0, 0L, active1, 0x800000L);
      case 122:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000000000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, active1);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(1, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, active1);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x100100L);
      case 98:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000000000000L, active1, 0L);
      case 100:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x10000000L);
      case 101:
         if ((active1 & 0x20L) != 0L)
            return jjStartNfaWithStates_0(3, 69, 484);
         return jjMoveStringLiteralDfa4_0(active0, 0x8508000000000000L, active1, 0x8c1c06L);
      case 102:
         if ((active1 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(3, 70, 484);
         break;
      case 105:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x4001L);
      case 107:
         if ((active0 & 0x4000000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 62, 484);
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000000000L, active1, 0L);
      case 108:
         if ((active0 & 0x20000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 53, 484);
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000L, active1, 0x8400000L);
      case 109:
         if ((active0 & 0x80000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 43, 484);
         break;
      case 110:
         if ((active0 & 0x2000000000000000L) != 0L)
            return jjStartNfaWithStates_0(3, 61, 484);
         else if ((active1 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(3, 94, 484);
         return jjMoveStringLiteralDfa4_0(active0, 0x4100000000000L, active1, 0x200000L);
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0L, active1, 0x2080L);
      case 114:
         return jjMoveStringLiteralDfa4_0(active0, 0x40001000000000L, active1, 0L);
      case 115:
         if ((active1 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(3, 81, 484);
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000000L, active1, 0L);
      case 116:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(3, 15, 484);
         return jjMoveStringLiteralDfa4_0(active0, 0x800000000L, active1, 0x5000000L);
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x200000080000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, active1);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(2, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, active1);
      return 4;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x1800000000000000L, active1, 0x1000000L);
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x200000000000000L, active1, 0x4880L);
      case 100:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 49, 484);
         else if ((active1 & 0x800000L) != 0L)
            return jjStartNfaWithStates_0(4, 87, 484);
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x80000L);
      case 101:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 36, 484);
         else if ((active0 & 0x20000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 41, 484);
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x8400000L);
      case 103:
         if ((active0 & 0x4000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 50, 484);
         break;
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x40000L);
      case 108:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x100L);
      case 109:
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x1L);
      case 110:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000000000000L, active1, 0L);
      case 111:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000000000000L, active1, 0x10000000L);
      case 114:
         if ((active1 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(4, 76, 484);
         return jjMoveStringLiteralDfa5_0(active0, 0x40000080000000L, active1, 0x4002002L);
      case 115:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000000000000L, active1, 0L);
      case 116:
         if ((active0 & 0x100000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 44, 484);
         else if ((active1 & 0x200000L) != 0L)
            return jjStartNfaWithStates_0(4, 85, 484);
         return jjMoveStringLiteralDfa5_0(active0, 0L, active1, 0x100404L);
      case 120:
         return jjMoveStringLiteralDfa5_0(active0, 0x8000000000000000L, active1, 0L);
      case 121:
         return jjMoveStringLiteralDfa5_0(active0, 0x800000000L, active1, 0L);
      default :
         break;
   }
   return jjStartNfa_0(3, active0, active1);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(3, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, active1);
      return 5;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x4000080L);
      case 100:
         if ((active1 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(5, 82, 484);
         else if ((active1 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(5, 91, 484);
         return jjMoveStringLiteralDfa6_0(active0, 0x400000000000000L, active1, 0L);
      case 101:
         if ((active1 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(5, 74, 484);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x80000L);
      case 102:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 56, 484);
         break;
      case 103:
         return jjMoveStringLiteralDfa6_0(active0, 0x800000000000000L, active1, 0L);
      case 105:
         return jjMoveStringLiteralDfa6_0(active0, 0x40000000000000L, active1, 0x100000L);
      case 108:
         if ((active0 & 0x1000000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 60, 484);
         break;
      case 109:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x400000L);
      case 110:
         if ((active0 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(5, 31, 484);
         else if ((active1 & 0x2L) != 0L)
            return jjStartNfaWithStates_0(5, 65, 484);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x11000000L);
      case 112:
         return jjMoveStringLiteralDfa6_0(active0, 0x8008000800000000L, active1, 0x1L);
      case 115:
         if ((active1 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(5, 72, 484);
         break;
      case 116:
         if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(5, 57, 484);
         else if ((active1 & 0x800L) != 0L)
            return jjStartNfaWithStates_0(5, 75, 484);
         else if ((active1 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(5, 77, 484);
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x4000L);
      case 117:
         return jjMoveStringLiteralDfa6_0(active0, 0L, active1, 0x4L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, active1);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(4, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, active1);
      return 6;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa7_0(active0, 0x8000000000000L, active1, 0L);
      case 99:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x5000000L);
      case 100:
         return jjMoveStringLiteralDfa7_0(active0, 0x40000000000000L, active1, 0L);
      case 101:
         if ((active0 & 0x800000000L) != 0L)
            return jjStartNfaWithStates_0(6, 35, 484);
         else if ((active0 & 0x800000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 59, 484);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x400000L);
      case 102:
         if ((active1 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(6, 83, 484);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x4000L);
      case 108:
         if ((active1 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(6, 71, 484);
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x10100000L);
      case 111:
         return jjMoveStringLiteralDfa7_0(active0, 0x8000000000000000L, active1, 0x1L);
      case 114:
         return jjMoveStringLiteralDfa7_0(active0, 0L, active1, 0x4L);
      case 115:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 58, 484);
         break;
      default :
         break;
   }
   return jjStartNfa_0(5, active0, active1);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(5, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, active1);
      return 7;
   }
   switch(curChar)
   {
      case 99:
         return jjMoveStringLiteralDfa8_0(active0, 0x8000000000000L, active1, 0L);
      case 101:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStartNfaWithStates_0(7, 54, 484);
         else if ((active1 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(7, 84, 484);
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x1000000L);
      case 110:
         if ((active1 & 0x4L) != 0L)
            return jjStartNfaWithStates_0(7, 66, 484);
         return jjMoveStringLiteralDfa8_0(active0, 0L, active1, 0x400000L);
      case 112:
         if ((active1 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(7, 78, 484);
         break;
      case 114:
         return jjMoveStringLiteralDfa8_0(active0, 0x8000000000000000L, active1, 0x1L);
      case 116:
         if ((active1 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(7, 90, 484);
         break;
      case 121:
         if ((active1 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(7, 92, 484);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, active1);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(6, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, active1);
      return 8;
   }
   switch(curChar)
   {
      case 101:
         if ((active0 & 0x8000000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 51, 484);
         break;
      case 111:
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x1000000L);
      case 116:
         if ((active0 & 0x8000000000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 63, 484);
         else if ((active1 & 0x1L) != 0L)
            return jjStartNfaWithStates_0(8, 64, 484);
         return jjMoveStringLiteralDfa9_0(active0, 0L, active1, 0x400000L);
      default :
         break;
   }
   return jjStartNfa_0(7, active0, active1);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0, long old1, long active1)
{
   if (((active0 &= old0) | (active1 &= old1)) == 0L)
      return jjStartNfa_0(7, old0, old1);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, 0L, active1);
      return 9;
   }
   switch(curChar)
   {
      case 102:
         if ((active1 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(9, 88, 484);
         break;
      case 115:
         if ((active1 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(9, 86, 484);
         break;
      default :
         break;
   }
   return jjStartNfa_0(8, 0L, active1);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 484;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 381:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 422:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 215:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 79:
                  if (curChar == 62)
                  {
                     if (kind > 9)
                        kind = 9;
                  }
                  else if (curChar == 61)
                  {
                     if (kind > 9)
                        kind = 9;
                  }
                  break;
               case 414:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 485:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 136:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 57:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 324:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 432:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 351:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 197:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 166:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 286:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 202:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 159:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 93:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 328:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 342:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 233:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 386:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 421:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 185:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 474:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 158:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 1:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 19)
                        kind = 19;
                     jjCheckNAdd(15);
                  }
                  else if ((0xac0000000000L & l) != 0L)
                  {
                     if (kind > 14)
                        kind = 14;
                  }
                  else if ((0x8400000000L & l) != 0L)
                  {
                     if (kind > 30)
                        kind = 30;
                  }
                  else if ((0x30000000000L & l) != 0L)
                  {
                     if (kind > 10)
                        kind = 10;
                  }
                  else if ((0x5000000000000000L & l) != 0L)
                  {
                     if (kind > 9)
                        kind = 9;
                  }
                  else if (curChar == 38)
                  {
                     if (kind > 18)
                        kind = 18;
                  }
                  else if (curChar == 61)
                     jjCheckNAddTwoStates(0, 79);
                  else if (curChar == 35)
                     jjAddStates(0, 2);
                  else if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 29;
                  else if (curChar == 46)
                  {
                     if (kind > 28)
                        kind = 28;
                  }
                  else if (curChar == 33)
                     jjCheckNAdd(0);
                  if (curChar == 47)
                     jjCheckNAddStates(3, 5);
                  else if (curChar == 45)
                     jjCheckNAddStates(6, 8);
                  else if (curChar == 43)
                     jjCheckNAddTwoStates(84, 82);
                  else if (curChar == 42)
                     jjCheckNAddStates(9, 11);
                  else if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 7;
                  else if (curChar == 60)
                     jjCheckNAdd(0);
                  break;
               case 444:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 165:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 148:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 160:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 484:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 175:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 387:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 473:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 186:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 176:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 234:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 353:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 431:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 188:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 345:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 171:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 369:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 352:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 447:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  else if (curChar == 46)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 0:
                  if (curChar == 61 && kind > 9)
                     kind = 9;
                  break;
               case 2:
                  if ((0x5000000000000000L & l) != 0L && kind > 9)
                     kind = 9;
                  break;
               case 3:
                  if (curChar == 60)
                     jjCheckNAdd(0);
                  break;
               case 4:
                  if ((0x30000000000L & l) != 0L)
                     kind = 10;
                  break;
               case 6:
                  if ((0xac0000000000L & l) != 0L && kind > 14)
                     kind = 14;
                  break;
               case 7:
                  if (curChar == 38 && kind > 16)
                     kind = 16;
                  break;
               case 8:
                  if (curChar == 38)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 15:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 19)
                     kind = 19;
                  jjCheckNAdd(15);
                  break;
               case 19:
                  if (curChar == 46 && kind > 28)
                     kind = 28;
                  break;
               case 20:
                  if ((0x8400000000L & l) != 0L)
                     kind = 30;
                  break;
               case 30:
                  if (curChar == 32)
                     jjstateSet[jjnewStateCnt++] = 29;
                  break;
               case 32:
                  if (curChar != 46)
                     break;
                  if (kind > 95)
                     kind = 95;
                  jjCheckNAddTwoStates(32, 33);
                  break;
               case 33:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  jjCheckNAddTwoStates(32, 33);
                  break;
               case 60:
                  if (curChar == 35)
                     jjAddStates(0, 2);
                  break;
               case 78:
                  if (curChar == 61)
                     jjCheckNAddTwoStates(0, 79);
                  break;
               case 80:
                  if (curChar == 42)
                     jjCheckNAddStates(9, 11);
                  break;
               case 81:
                  if (curChar == 47 && kind > 12)
                     kind = 12;
                  break;
               case 82:
                  if (curChar == 61 && kind > 14)
                     kind = 14;
                  break;
               case 83:
                  if (curChar == 43)
                     jjCheckNAddTwoStates(84, 82);
                  break;
               case 84:
                  if (curChar == 43 && kind > 13)
                     kind = 13;
                  break;
               case 85:
                  if (curChar == 45)
                     jjCheckNAddStates(6, 8);
                  break;
               case 86:
                  if (curChar == 45 && kind > 13)
                     kind = 13;
                  break;
               case 87:
                  if (curChar == 62 && kind > 28)
                     kind = 28;
                  break;
               case 88:
                  if (curChar == 47)
                     jjCheckNAddStates(3, 5);
                  break;
               case 89:
                  if (curChar == 42 && kind > 12)
                     kind = 12;
                  break;
               case 134:
                  if (curChar == 38 && kind > 18)
                     kind = 18;
                  break;
               case 146:
                  if (curChar == 54 && kind > 27)
                     kind = 27;
                  break;
               case 147:
                  if (curChar == 49)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 150:
                  if (curChar == 52 && kind > 27)
                     kind = 27;
                  break;
               case 151:
                  if (curChar == 54)
                     jjstateSet[jjnewStateCnt++] = 150;
                  break;
               case 307:
                  if (curChar == 32 && kind > 40)
                     kind = 40;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 381:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 101)
                     jjCheckNAdd(371);
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 380;
                  break;
               case 422:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 439;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 426;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 421;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 215:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 414:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 415;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 413;
                  break;
               case 485:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 116)
                  {
                     if (kind > 80)
                        kind = 80;
                  }
                  break;
               case 136:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 110)
                  {
                     if (kind > 48)
                        kind = 48;
                  }
                  else if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 160;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 142;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 138;
                  else if (curChar == 100)
                  {
                     if (kind > 24)
                        kind = 24;
                  }
                  else if (curChar == 102)
                  {
                     if (kind > 23)
                        kind = 23;
                  }
                  if (curChar == 110)
                  {
                     if (kind > 33)
                        kind = 33;
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 152;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 148;
                  if (curChar == 110)
                     jjCheckNAdd(144);
                  break;
               case 57:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 108)
                     jjCheckNAdd(58);
                  else if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 324:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 330;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 328;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 325;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 432:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 438;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 431;
                  break;
               case 351:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 110)
                     jjCheckNAdd(327);
                  break;
               case 197:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 228;
                  else if (curChar == 111)
                  {
                     if (kind > 47)
                        kind = 47;
                  }
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 216;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 210;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 196;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 207;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 166:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 171;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 286:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 318;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 314;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 310;
                  else if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 288;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 305;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 302;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 295;
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 292;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 285;
                  break;
               case 202:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 215;
                  else if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 201;
                  break;
               case 159:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 93:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 132;
                  else if (curChar == 114)
                     jjCheckNAdd(123);
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 107;
                  else if (curChar == 101)
                     jjCheckNAdd(100);
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 98;
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 127;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 121;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 94;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 113;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 110;
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 328:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 110)
                     jjCheckNAdd(327);
                  break;
               case 342:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 376;
                  else if (curChar == 101)
                     jjCheckNAdd(371);
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 369;
                  else if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 364;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 359;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 356;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 349;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 345;
                  else if (curChar == 110)
                     jjCheckNAdd(52);
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 353;
                  else if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 233:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 279;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 248;
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 232;
                  break;
               case 386:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 385;
                  break;
               case 421:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 420;
                  break;
               case 185:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 474:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 120)
                  {
                     if (kind > 24)
                        kind = 24;
                  }
                  else if (curChar == 112)
                  {
                     if (kind > 24)
                        kind = 24;
                  }
                  break;
               case 158:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 157;
                  break;
               case 1:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x2800000000000000L & l) != 0L)
                  {
                     if (kind > 17)
                        kind = 17;
                  }
                  else if ((0x28000000L & l) != 0L)
                  {
                     if (kind > 11)
                        kind = 11;
                  }
                  else if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 9;
                  if (curChar == 109)
                     jjAddStates(15, 18);
                  else if (curChar == 114)
                     jjAddStates(19, 23);
                  else if (curChar == 112)
                     jjAddStates(24, 27);
                  else if (curChar == 111)
                     jjAddStates(28, 29);
                  else if (curChar == 117)
                     jjAddStates(30, 34);
                  else if (curChar == 103)
                     jjAddStates(35, 36);
                  else if (curChar == 115)
                     jjAddStates(37, 47);
                  else if (curChar == 98)
                     jjAddStates(48, 50);
                  else if (curChar == 108)
                     jjAddStates(51, 54);
                  else if (curChar == 99)
                     jjAddStates(55, 63);
                  else if (curChar == 102)
                     jjAddStates(64, 75);
                  else if (curChar == 100)
                     jjAddStates(76, 82);
                  else if (curChar == 118)
                     jjAddStates(83, 85);
                  else if (curChar == 110)
                     jjAddStates(86, 88);
                  else if (curChar == 101)
                     jjAddStates(89, 90);
                  else if (curChar == 105)
                     jjCheckNAddStates(91, 100);
                  else if (curChar == 116)
                     jjAddStates(101, 111);
                  else if (curChar == 97)
                     jjAddStates(112, 113);
                  else if (curChar == 104)
                     jjAddStates(114, 115);
                  else if (curChar == 66)
                     jjAddStates(116, 117);
                  else if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 23;
                  else if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 17;
                  else if (curChar == 88)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 444:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 470;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 443;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 463;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 449;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 165:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 148:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 151;
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 147;
                  if (curChar == 116)
                  {
                     if (kind > 27)
                        kind = 27;
                  }
                  break;
               case 160:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 484:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  break;
               case 175:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 119)
                  {
                     if (kind > 52)
                        kind = 52;
                  }
                  else if (curChar == 120)
                     jjCheckNAdd(174);
                  break;
               case 387:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 405;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 391;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 389;
                  else if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 386;
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 473:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 482;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 476;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 474;
                  if (curChar == 97)
                     jjCheckNAdd(16);
                  break;
               case 186:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 193;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 188;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 176:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 179;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 177;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 234:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 280;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 275;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 270;
                  else if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 262;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 259;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 256;
                  else if (curChar == 115)
                     jjCheckNAdd(174);
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 264;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 249;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 239;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 233;
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 353:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 375;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 431:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 118)
                     jjstateSet[jjnewStateCnt++] = 430;
                  break;
               case 188:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 345:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 109)
                  {
                     if (kind > 24)
                        kind = 24;
                  }
                  break;
               case 171:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 170;
                  break;
               case 369:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 368;
                  break;
               case 352:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 447:
                  if ((0x7fffffe07fffffeL & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddStates(12, 14);
                  }
                  else if ((0x80000001L & l) != 0L)
                  {
                     if (kind > 95)
                        kind = 95;
                     jjCheckNAddTwoStates(32, 33);
                  }
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 469;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 462;
                  else if (curChar == 102)
                  {
                     if (kind > 48)
                        kind = 48;
                  }
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 446;
                  break;
               case 5:
                  if ((0x28000000L & l) != 0L)
                     kind = 11;
                  break;
               case 9:
                  if (curChar == 124 && kind > 16)
                     kind = 16;
                  break;
               case 10:
                  if (curChar == 124)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 82 && kind > 16)
                     kind = 16;
                  break;
               case 12:
                  if (curChar == 79)
                     jjstateSet[jjnewStateCnt++] = 11;
                  break;
               case 13:
                  if (curChar == 88)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if ((0x2800000000000000L & l) != 0L)
                     kind = 17;
                  break;
               case 16:
                  if (curChar == 112 && kind > 24)
                     kind = 24;
                  break;
               case 17:
                  if (curChar == 105)
                     jjCheckNAdd(16);
                  break;
               case 18:
                  if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 21:
                  if (curChar == 102 && kind > 34)
                     kind = 34;
                  break;
               case 22:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 76)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 101 && kind > 47)
                     kind = 47;
                  break;
               case 26:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 28;
                  break;
               case 31:
                  if ((0x7fffffe07fffffeL & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  jjCheckNAddStates(12, 14);
                  break;
               case 32:
                  if ((0x80000001L & l) == 0L)
                     break;
                  if (kind > 95)
                     kind = 95;
                  jjCheckNAddTwoStates(32, 33);
                  break;
               case 34:
                  if (curChar == 66)
                     jjAddStates(116, 117);
                  break;
               case 35:
                  if (curChar == 101 && kind > 34)
                     kind = 34;
                  break;
               case 36:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 37:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 38:
                  if (curChar == 84)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 38;
                  break;
               case 40:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 42:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 43:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 44:
                  if (curChar == 104 && kind > 34)
                     kind = 34;
                  break;
               case 45:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 44;
                  break;
               case 46:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 45;
                  break;
               case 47:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 47;
                  break;
               case 49:
                  if (curChar == 104)
                     jjAddStates(114, 115);
                  break;
               case 50:
                  if (curChar == 119 && kind > 24)
                     kind = 24;
                  break;
               case 51:
               case 343:
                  if (curChar == 111)
                     jjCheckNAdd(50);
                  break;
               case 52:
                  if (curChar == 100 && kind > 24)
                     kind = 24;
                  break;
               case 53:
                  if (curChar == 97)
                     jjCheckNAdd(52);
                  break;
               case 54:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
                  if (curChar == 97)
                     jjAddStates(112, 113);
                  break;
               case 56:
                  if (curChar == 121 && kind > 24)
                     kind = 24;
                  break;
               case 58:
                  if (curChar == 108 && kind > 24)
                     kind = 24;
                  break;
               case 59:
                  if (curChar == 108)
                     jjCheckNAdd(58);
                  break;
               case 61:
                  if (curChar == 101 && kind > 22)
                     kind = 22;
                  break;
               case 62:
                  if (curChar == 100)
                     jjCheckNAdd(61);
                  break;
               case 63:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 62;
                  break;
               case 64:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 63;
                  break;
               case 65:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 67:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 66;
                  break;
               case 68:
                  if (curChar == 110)
                     jjCheckNAdd(61);
                  break;
               case 69:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 68;
                  break;
               case 70:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 69;
                  break;
               case 71:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 70;
                  break;
               case 72:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 71;
                  break;
               case 73:
                  if (curChar == 102 && kind > 22)
                     kind = 22;
                  break;
               case 74:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 73;
                  break;
               case 75:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 76:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 77:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 90:
                  if (curChar == 116)
                     jjAddStates(101, 111);
                  break;
               case 91:
                  if (curChar == 115 && kind > 18)
                     kind = 18;
                  break;
               case 92:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 94:
                  if (curChar == 105)
                     jjCheckNAdd(58);
                  break;
               case 95:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 101 && kind > 24)
                     kind = 24;
                  break;
               case 97:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 98:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if (curChar == 101 && kind > 25)
                     kind = 25;
                  break;
               case 101:
                  if (curChar == 101)
                     jjCheckNAdd(100);
                  break;
               case 102:
               case 287:
                  if (curChar == 108)
                     jjCheckNAdd(100);
                  break;
               case 103:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 102;
                  break;
               case 104:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 103;
                  break;
               case 105:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 106:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 105;
                  break;
               case 107:
                  if (curChar == 107)
                     jjstateSet[jjnewStateCnt++] = 106;
                  break;
               case 108:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if (curChar == 115 && kind > 26)
                     kind = 26;
                  break;
               case 110:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 101 && kind > 46)
                     kind = 46;
                  break;
               case 113:
                  if (curChar == 117)
                     jjCheckNAdd(112);
                  break;
               case 114:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 115:
                  if (curChar == 116 && kind > 52)
                     kind = 52;
                  break;
               case 116:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 116;
                  break;
               case 118:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 117;
                  break;
               case 119:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 121 && kind > 93)
                     kind = 93;
                  break;
               case 124:
                  if (curChar == 114)
                     jjCheckNAdd(123);
                  break;
               case 125:
                  if (curChar == 119 && kind > 93)
                     kind = 93;
                  break;
               case 126:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 115 && kind > 93)
                     kind = 93;
                  break;
               case 130:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 131;
                  break;
               case 133:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 132;
                  break;
               case 135:
                  if (curChar == 105)
                     jjCheckNAddStates(91, 100);
                  break;
               case 137:
                  if (curChar == 114 && kind > 24)
                     kind = 24;
                  break;
               case 138:
               case 231:
                  if (curChar == 101)
                     jjCheckNAdd(137);
                  break;
               case 139:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 99)
                     jjCheckNAdd(100);
                  break;
               case 141:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 142;
                  break;
               case 144:
                  if (curChar == 116 && kind > 27)
                     kind = 27;
                  break;
               case 145:
               case 177:
               case 391:
                  if (curChar == 110)
                     jjCheckNAdd(144);
                  break;
               case 149:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 152:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 151;
                  break;
               case 153:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if (curChar == 110 && kind > 33)
                     kind = 33;
                  break;
               case 155:
                  if (curChar == 116 && kind > 45)
                     kind = 45;
                  break;
               case 156:
               case 167:
                  if (curChar == 105)
                     jjCheckNAdd(155);
                  break;
               case 157:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 161:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 110 && kind > 48)
                     kind = 48;
                  break;
               case 163:
                  if (curChar == 101)
                     jjAddStates(89, 90);
                  break;
               case 164:
                  if (curChar == 101 && kind > 23)
                     kind = 23;
                  break;
               case 168:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 172:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if (curChar == 110)
                     jjAddStates(86, 88);
                  break;
               case 174:
                  if (curChar == 116 && kind > 24)
                     kind = 24;
                  break;
               case 178:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if (curChar == 119 && kind > 52)
                     kind = 52;
                  break;
               case 180:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 179;
                  break;
               case 181:
                  if (curChar == 118)
                     jjAddStates(83, 85);
                  break;
               case 182:
                  if (curChar == 115 && kind > 24)
                     kind = 24;
                  break;
               case 183:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 187:
                  if (curChar == 100 && kind > 27)
                     kind = 27;
                  break;
               case 189:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 114 && kind > 34)
                     kind = 34;
                  break;
               case 191:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 192;
                  break;
               case 194:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 193;
                  break;
               case 195:
                  if (curChar == 100)
                     jjAddStates(76, 82);
                  break;
               case 196:
                  if (curChar == 99)
                     jjCheckNAdd(174);
                  break;
               case 198:
                  if (curChar == 108 && kind > 27)
                     kind = 27;
                  break;
               case 199:
                  if (curChar == 97)
                     jjCheckNAdd(198);
                  break;
               case 200:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 200;
                  break;
               case 203:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if (curChar == 101 && kind > 27)
                     kind = 27;
                  break;
               case 205:
                  if (curChar == 108)
                     jjCheckNAdd(204);
                  break;
               case 206:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 205;
                  break;
               case 207:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if (curChar == 97 && kind > 27)
                     kind = 27;
                  break;
               case 210:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if (curChar == 116 && kind > 39)
                     kind = 39;
                  break;
               case 213:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 216:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 215;
                  break;
               case 217:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if (curChar == 111 && kind > 47)
                     kind = 47;
                  break;
               case 219:
                  if (curChar == 116 && kind > 73)
                     kind = 73;
                  break;
               case 220:
               case 451:
                  if (curChar == 115)
                     jjCheckNAdd(219);
                  break;
               case 221:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 224:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 223;
                  break;
               case 225:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 228:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 227;
                  break;
               case 229:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if (curChar == 102)
                     jjAddStates(64, 75);
                  break;
               case 232:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 231;
                  break;
               case 235:
                  if (curChar == 100)
                     jjCheckNAdd(137);
                  break;
               case 236:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if (curChar == 100)
                     jjCheckNAdd(58);
                  break;
               case 239:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
               case 325:
                  if (curChar == 115)
                     jjCheckNAdd(174);
                  break;
               case 242:
                  if (curChar == 115)
                     jjCheckNAdd(100);
                  break;
               case 243:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 242;
                  break;
               case 244:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 250:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 249;
                  break;
               case 251:
                  if (curChar == 110 && kind > 27)
                     kind = 27;
                  break;
               case 252:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 257:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 256;
                  break;
               case 258:
                  if (curChar == 97)
                     jjCheckNAdd(144);
                  break;
               case 259:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 261:
                  if (curChar == 115)
                     jjCheckNAdd(112);
                  break;
               case 262:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if (curChar == 114 && kind > 47)
                     kind = 47;
                  break;
               case 265:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 264;
                  break;
               case 266:
                  if (curChar == 104 && kind > 47)
                     kind = 47;
                  break;
               case 267:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 271:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 272:
                  if (curChar == 100 && kind > 55)
                     kind = 55;
                  break;
               case 273:
                  if (curChar == 110)
                     jjCheckNAdd(272);
                  break;
               case 274:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 275:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 274;
                  break;
               case 276:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 277:
                  if (curChar == 108)
                     jjCheckNAdd(123);
                  break;
               case 278:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if (curChar == 99)
                     jjAddStates(55, 63);
                  break;
               case 283:
                  if (curChar == 116 && kind > 25)
                     kind = 25;
                  break;
               case 284:
                  if (curChar == 110)
                     jjCheckNAdd(283);
                  break;
               case 285:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 288:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 287;
                  break;
               case 289:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 288;
                  break;
               case 290:
                  if (curChar == 110 && kind > 25)
                     kind = 25;
                  break;
               case 291:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 292:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 293:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 294:
                  if (curChar == 114 && kind > 27)
                     kind = 27;
                  break;
               case 295:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if (curChar == 101 && kind > 38)
                     kind = 38;
                  break;
               case 298:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 299;
                  break;
               case 301:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 300;
                  break;
               case 302:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 303:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if (curChar == 101 && kind > 39)
                     kind = 39;
                  break;
               case 305:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 308:
                  if (curChar == 107)
                     jjstateSet[jjnewStateCnt++] = 307;
                  break;
               case 309:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 308;
                  break;
               case 310:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 311:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 310;
                  break;
               case 312:
                  if (curChar == 116 && kind > 42)
                     kind = 42;
                  break;
               case 313:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if (curChar == 104 && kind > 93)
                     kind = 93;
                  break;
               case 317:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 317;
                  break;
               case 319:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 318;
                  break;
               case 320:
                  if (curChar == 108)
                     jjAddStates(51, 54);
                  break;
               case 321:
                  if (curChar == 104)
                     jjCheckNAdd(174);
                  break;
               case 322:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 321;
                  break;
               case 323:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 326:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 327:
                  if (curChar == 103 && kind > 27)
                     kind = 27;
                  break;
               case 329:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 330:
                  if (curChar == 116 && kind > 33)
                     kind = 33;
                  break;
               case 331:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 330;
                  break;
               case 332:
                  if (curChar == 98)
                     jjAddStates(48, 50);
                  break;
               case 333:
                  if (curChar == 111)
                     jjCheckNAdd(198);
                  break;
               case 334:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 335:
               case 355:
                  if (curChar == 116)
                     jjCheckNAdd(204);
                  break;
               case 336:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 335;
                  break;
               case 337:
                  if (curChar == 107 && kind > 38)
                     kind = 38;
                  break;
               case 338:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 337;
                  break;
               case 339:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 340:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 341:
                  if (curChar == 115)
                     jjAddStates(37, 47);
                  break;
               case 344:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 346:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 345;
                  break;
               case 347:
                  if (curChar == 101)
                     jjCheckNAdd(52);
                  break;
               case 348:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 349:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 350:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 354:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 353;
                  break;
               case 356:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 355;
                  break;
               case 357:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 356;
                  break;
               case 358:
               case 384:
                  if (curChar == 114)
                     jjCheckNAdd(144);
                  break;
               case 359:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 358;
                  break;
               case 360:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 359;
                  break;
               case 361:
                  if (curChar == 104 && kind > 39)
                     kind = 39;
                  break;
               case 362:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 361;
                  break;
               case 363:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 362;
                  break;
               case 364:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 363;
                  break;
               case 365:
                  if (curChar == 119)
                     jjstateSet[jjnewStateCnt++] = 364;
                  break;
               case 366:
                  if (curChar == 100 && kind > 42)
                     kind = 42;
                  break;
               case 367:
               case 401:
                  if (curChar == 101)
                     jjCheckNAdd(366);
                  break;
               case 368:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 367;
                  break;
               case 370:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 369;
                  break;
               case 371:
                  if (curChar == 116 && kind > 80)
                     kind = 80;
                  break;
               case 372:
                  if (curChar == 101)
                     jjCheckNAdd(371);
                  break;
               case 373:
                  if (curChar == 99 && kind > 89)
                     kind = 89;
                  break;
               case 374:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 373;
                  break;
               case 375:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 374;
                  break;
               case 376:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 375;
                  break;
               case 377:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 376;
                  break;
               case 378:
                  if (curChar == 103)
                     jjAddStates(35, 36);
                  break;
               case 379:
                  if (curChar == 111 && kind > 39)
                     kind = 39;
                  break;
               case 380:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 379;
                  break;
               case 382:
                  if (curChar == 101)
                     jjCheckNAdd(371);
                  break;
               case 383:
                  if (curChar == 117)
                     jjAddStates(30, 34);
                  break;
               case 385:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 384;
                  break;
               case 388:
                  if (curChar == 110)
                     jjCheckNAdd(327);
                  break;
               case 389:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 388;
                  break;
               case 390:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 389;
                  break;
               case 392:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 391;
                  break;
               case 393:
                  if (curChar == 100 && kind > 40)
                     kind = 40;
                  break;
               case 394:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 393;
                  break;
               case 395:
                  if (curChar == 107)
                     jjstateSet[jjnewStateCnt++] = 394;
                  break;
               case 396:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 395;
                  break;
               case 397:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 396;
                  break;
               case 398:
                  if (curChar == 104)
                     jjstateSet[jjnewStateCnt++] = 397;
                  break;
               case 399:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 398;
                  break;
               case 400:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 399;
                  break;
               case 402:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 401;
                  break;
               case 403:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 402;
                  break;
               case 404:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 403;
                  break;
               case 405:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 404;
                  break;
               case 406:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 405;
                  break;
               case 407:
                  if (curChar == 111)
                     jjAddStates(28, 29);
                  break;
               case 408:
                  if (curChar == 114 && kind > 45)
                     kind = 45;
                  break;
               case 409:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 408;
                  break;
               case 410:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 409;
                  break;
               case 411:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 410;
                  break;
               case 412:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 411;
                  break;
               case 413:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 412;
                  break;
               case 415:
                  if (curChar == 116 && kind > 48)
                     kind = 48;
                  break;
               case 416:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 415;
                  break;
               case 417:
                  if (curChar == 112)
                     jjAddStates(24, 27);
                  break;
               case 418:
                  if (curChar == 115 && kind > 48)
                     kind = 48;
                  break;
               case 419:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 418;
                  break;
               case 420:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 419;
                  break;
               case 423:
                  if (curChar == 99 && kind > 55)
                     kind = 55;
                  break;
               case 424:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 423;
                  break;
               case 425:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 424;
                  break;
               case 426:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 425;
                  break;
               case 427:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 426;
                  break;
               case 428:
                  if (curChar == 101 && kind > 55)
                     kind = 55;
                  break;
               case 429:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 428;
                  break;
               case 430:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 429;
                  break;
               case 433:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 432;
                  break;
               case 434:
                  if (curChar == 101)
                     jjCheckNAdd(272);
                  break;
               case 435:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 434;
                  break;
               case 436:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 435;
                  break;
               case 437:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 436;
                  break;
               case 438:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 437;
                  break;
               case 439:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 438;
                  break;
               case 440:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 439;
                  break;
               case 441:
                  if (curChar == 114)
                     jjAddStates(19, 23);
                  break;
               case 442:
                  if (curChar == 103)
                     jjCheckNAdd(100);
                  break;
               case 443:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 442;
                  break;
               case 445:
                  if (curChar == 97)
                     jjCheckNAdd(283);
                  break;
               case 446:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 445;
                  break;
               case 448:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 447;
                  break;
               case 449:
                  if (curChar == 102 && kind > 48)
                     kind = 48;
                  break;
               case 450:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 449;
                  break;
               case 452:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 451;
                  break;
               case 453:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 452;
                  break;
               case 454:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 453;
                  break;
               case 455:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 454;
                  break;
               case 456:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 455;
                  break;
               case 457:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 456;
                  break;
               case 458:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 457;
                  break;
               case 459:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 458;
                  break;
               case 460:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 459;
                  break;
               case 461:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 460;
                  break;
               case 462:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 461;
                  break;
               case 463:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 462;
                  break;
               case 464:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 463;
                  break;
               case 465:
                  if (curChar == 114 && kind > 89)
                     kind = 89;
                  break;
               case 466:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 465;
                  break;
               case 467:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 466;
                  break;
               case 468:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 467;
                  break;
               case 469:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 468;
                  break;
               case 470:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 469;
                  break;
               case 471:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 470;
                  break;
               case 472:
                  if (curChar == 109)
                     jjAddStates(15, 18);
                  break;
               case 475:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 474;
                  break;
               case 476:
                  if (curChar == 110 && kind > 24)
                     kind = 24;
                  break;
               case 477:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 476;
                  break;
               case 478:
                  if (curChar == 101 && kind > 89)
                     kind = 89;
                  break;
               case 479:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 478;
                  break;
               case 480:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 479;
                  break;
               case 481:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 480;
                  break;
               case 482:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 481;
                  break;
               case 483:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 482;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 484 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
static final int[] jjnextStates = {
   67, 72, 77, 89, 81, 82, 86, 82, 87, 81, 82, 82, 31, 32, 33, 473, 
   475, 477, 483, 444, 448, 450, 464, 471, 422, 427, 433, 440, 414, 416, 387, 390, 
   392, 400, 406, 381, 382, 342, 344, 346, 350, 354, 357, 360, 365, 370, 372, 377, 
   334, 336, 340, 324, 326, 329, 331, 286, 289, 293, 296, 303, 306, 311, 315, 319, 
   234, 237, 240, 241, 250, 257, 260, 263, 265, 271, 276, 281, 197, 203, 208, 211, 
   217, 218, 229, 186, 189, 194, 176, 178, 180, 166, 172, 136, 52, 139, 143, 145, 
   149, 153, 154, 161, 162, 93, 95, 99, 101, 108, 111, 114, 122, 124, 128, 133, 
   57, 59, 51, 54, 43, 48, 
};

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, null, null, "\75", null, null, null, null, 
null, null, "\163\161\162\164", null, null, null, null, "\54", "\72", null, null, 
null, null, null, null, null, "\73", null, "\162\145\164\165\162\156", "\157\146", 
null, null, "\156\145\167\164\171\160\145", "\167\150\145\162\145", "\141\163", null, 
null, null, "\143\154\141\163\145", null, "\145\156\165\155", 
"\145\166\145\156\164", null, null, null, null, "\171\151\145\154\144", "\165\163\151\156\147", 
"\156\141\155\145\163\160\141\143\145", null, "\156\165\154\154", "\157\166\145\162\162\151\144\145", null, 
"\163\151\172\145\157\146", "\163\164\162\165\143\164", "\145\170\164\145\156\144\163", 
"\160\141\143\153\141\147\145", "\147\154\157\142\141\154", "\152\157\151\156", "\154\157\143\153", 
"\144\154\154\145\170\160\157\162\164", "\144\154\154\151\155\160\157\162\164", "\145\170\164\145\162\156", 
"\156\157\162\145\164\165\162\156", "\144\145\146", "\144\145\154", "\156\157\156\145", "\145\154\151\146", 
"\156\157\154\157\143\141\154", "\145\161\165\141\154\163", null, "\144\145\154\145\164\145", 
"\157\142\152\145\143\164", "\163\165\160\145\162", "\151\155\160\157\162\164", 
"\163\164\162\151\143\164\146\160", "\166\141\162", null, "\160\141\163\163", "\164\171\160\145\151\144", 
"\164\171\160\145\144\145\146", "\166\157\154\141\164\151\154\145", "\160\162\151\156\164", 
"\151\155\160\154\145\155\145\156\164\163", "\146\151\170\145\144", "\151\156\163\164\141\156\143\145\157\146", null, 
"\141\142\163\164\162\141\143\164", "\163\145\141\154\145\144", "\162\145\141\144\157\156\154\171", null, 
"\155\141\151\156", null, };

/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
};
static final long[] jjtoToken = {
   0xffffffffffffff01L, 0xffffffffL, 
};
static final long[] jjtoSkip = {
   0x3eL, 0x0L, 
};
protected SimpleCharStream input_stream;
private final int[] jjrounds = new int[484];
private final int[] jjstateSet = new int[968];
private final StringBuilder jjimage = new StringBuilder();
private StringBuilder image = jjimage;
private int jjimageLen;
private int lengthOfMatch;
protected char curChar;
/** Constructor. */
public lexicoTokenManager(SimpleCharStream stream){
   if (SimpleCharStream.staticFlag)
      throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");
   input_stream = stream;
}

/** Constructor. */
public lexicoTokenManager(SimpleCharStream stream, int lexState){
   this(stream);
   SwitchTo(lexState);
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream)
{
   jjmatchedPos = jjnewStateCnt = 0;
   curLexState = defaultLexState;
   input_stream = stream;
   ReInitRounds();
}
private void ReInitRounds()
{
   int i;
   jjround = 0x80000001;
   for (i = 484; i-- > 0;)
      jjrounds[i] = 0x80000000;
}

/** Reinitialise parser. */
public void ReInit(SimpleCharStream stream, int lexState)
{
   ReInit(stream);
   SwitchTo(lexState);
}

/** Switch to specified lex state. */
public void SwitchTo(int lexState)
{
   if (lexState >= 1 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
   else
      curLexState = lexState;
}

protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(java.io.IOException e)
   {
      jjmatchedKind = 0;
      matchedToken = jjFillToken();
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   try { input_stream.backup(0);
      while (curChar <= 10 && (0x600L & (1L << curChar)) != 0L)
         curChar = input_stream.BeginToken();
   }
   catch (java.io.IOException e1) { continue EOFLoop; }
   jjmatchedKind = 0x7fffffff;
   jjmatchedPos = 0;
   curPos = jjMoveStringLiteralDfa0_0();
   if (jjmatchedKind != 0x7fffffff)
   {
      if (jjmatchedPos + 1 < curPos)
         input_stream.backup(curPos - jjmatchedPos - 1);
      if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
      {
         matchedToken = jjFillToken();
         TokenLexicalActions(matchedToken);
         return matchedToken;
      }
      else
      {
         continue EOFLoop;
      }
   }
   int error_line = input_stream.getEndLine();
   int error_column = input_stream.getEndColumn();
   String error_after = null;
   boolean EOFSeen = false;
   try { input_stream.readChar(); input_stream.backup(1); }
   catch (java.io.IOException e1) {
      EOFSeen = true;
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
      if (curChar == '\n' || curChar == '\r') {
         error_line++;
         error_column = 0;
      }
      else
         error_column++;
   }
   if (!EOFSeen) {
      input_stream.backup(1);
      error_after = curPos <= 1 ? "" : input_stream.GetImage();
   }
   throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 8 :
        image.append(jjstrLiteralImages[8]);
        lengthOfMatch = jjstrLiteralImages[8].length();
                              System.out.println("Asignacion");
         break;
      case 9 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
         System.out.println("OperadorRelacional ("+image+")");
         break;
      case 10 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                   System.out.println("Parentesis ("+image+")");
         break;
      case 11 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                  System.out.println("Corchete ("+image+")");
         break;
      case 12 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                              System.out.println("Comentario ("+image+")");
         break;
      case 13 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                               System.out.println("OperadorAritmetico ("+image+")");
         break;
      case 14 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
         System.out.println("OperadorAritmeticoBinario ("+image+")");
         break;
      case 15 :
        image.append(jjstrLiteralImages[15]);
        lengthOfMatch = jjstrLiteralImages[15].length();
                                          System.out.println("FuncionMatematica ("+image+")");
         break;
      case 16 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
         System.out.println("OperadoresLogicos ("+image+")");
         break;
      case 17 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                  System.out.println("Llaves ("+image+")");
         break;
      case 18 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                  System.out.println("ReferenciasPunteros ("+image+")");
         break;
      case 19 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                    System.out.println("Numero");
         break;
      case 20 :
        image.append(jjstrLiteralImages[20]);
        lengthOfMatch = jjstrLiteralImages[20].length();
                          System.out.println("Coma");
         break;
      case 21 :
        image.append(jjstrLiteralImages[21]);
        lengthOfMatch = jjstrLiteralImages[21].length();
                           System.out.println("Rango");
         break;
      case 22 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
         System.out.println("DirectivaDePreprocesador ("+image+")");
         break;
      case 23 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                        System.out.println("SentenciaIf("+image+")");
         break;
      case 24 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                                                                                                                                                                              System.out.println("FuncionPredefinida ("+image+")");
         break;
      case 25 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                                                                                    System.out.println("FuncionesPredefinidasIterativas ("+image+")");
         break;
      case 26 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                            System.out.println("ReferenciaApuntador");
         break;
      case 27 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                                                                                                                                                                           System.out.println("TipoDeDato ("+image+")");
         break;
      case 28 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                       System.out.println("AccesoAElementos -> " + image);
         break;
      case 29 :
        image.append(jjstrLiteralImages[29]);
        lengthOfMatch = jjstrLiteralImages[29].length();
                          System.out.println("FinDeLinea");
         break;
      case 30 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                               System.out.println("Comillas");
         break;
      case 31 :
        image.append(jjstrLiteralImages[31]);
        lengthOfMatch = jjstrLiteralImages[31].length();
                            System.out.println("return");
         break;
      case 32 :
        image.append(jjstrLiteralImages[32]);
        lengthOfMatch = jjstrLiteralImages[32].length();
                                 System.out.println("OfExpresionCase");
         break;
      case 33 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                             System.out.println("ParteExpresionLet ("+image+")");
         break;
      case 34 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                      System.out.println("ClasesPredefinidas ("+image+")");
         break;
      case 35 :
        image.append(jjstrLiteralImages[35]);
        lengthOfMatch = jjstrLiteralImages[35].length();
                                           System.out.println("DeclaracionDeTipos");
         break;
      case 36 :
        image.append(jjstrLiteralImages[36]);
        lengthOfMatch = jjstrLiteralImages[36].length();
                                      System.out.println("ExpresionWhere");
         break;
      case 37 :
        image.append(jjstrLiteralImages[37]);
        lengthOfMatch = jjstrLiteralImages[37].length();
                                        System.out.println("as");
         break;
      case 38 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                         System.out.println("InterrupcionDeProcesos ("+image+")");
         break;
      case 39 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                       System.out.println("ComponentesSentenciaCase("+image+")");
         break;
      case 40 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                               System.out.println("ComprobacionDeDesbordamiento("+image+")");
         break;
      case 41 :
        image.append(jjstrLiteralImages[41]);
        lengthOfMatch = jjstrLiteralImages[41].length();
                                        System.out.println("DeclaracionDeClase");
         break;
      case 42 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                           System.out.println("ModificadorDeTipo("+image+")");
         break;
      case 43 :
        image.append(jjstrLiteralImages[43]);
        lengthOfMatch = jjstrLiteralImages[43].length();
                                          System.out.println("DeclaracionEnumeracion");
         break;
      case 44 :
        image.append(jjstrLiteralImages[44]);
        lengthOfMatch = jjstrLiteralImages[44].length();
                                        System.out.println("DeclaracionDeEvento");
         break;
      case 45 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                     System.out.println("OperacionesDeConversion("+image+")");
         break;
      case 46 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                         System.out.println("ValorBooleano("+image+")");
         break;
      case 47 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                 System.out.println("Ciclo("+image+")");
         break;
      case 48 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                              System.out.println("ModificadorDeParametro("+image+")");
         break;
      case 49 :
        image.append(jjstrLiteralImages[49]);
        lengthOfMatch = jjstrLiteralImages[49].length();
                                           System.out.println("ProductorDeGeneradores");
         break;
      case 50 :
        image.append(jjstrLiteralImages[50]);
        lengthOfMatch = jjstrLiteralImages[50].length();
                                   System.out.println("SentenciaUsing");
         break;
      case 51 :
        image.append(jjstrLiteralImages[51]);
        lengthOfMatch = jjstrLiteralImages[51].length();
                                        System.out.println("EspacioDeNombre");
         break;
      case 52 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                            System.out.println("ModificadorDeclaracionMiembro("+image+")");
         break;
      case 53 :
        image.append(jjstrLiteralImages[53]);
        lengthOfMatch = jjstrLiteralImages[53].length();
                             System.out.println("ValorNulo");
         break;
      case 54 :
        image.append(jjstrLiteralImages[54]);
        lengthOfMatch = jjstrLiteralImages[54].length();
                                           System.out.println("ModificadorDeMetodo");
         break;
      case 55 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                         System.out.println("ModificadorDeAcceso("+image+")");
         break;
      case 56 :
        image.append(jjstrLiteralImages[56]);
        lengthOfMatch = jjstrLiteralImages[56].length();
                                  System.out.println("TamanoDeTipo");
         break;
      case 57 :
        image.append(jjstrLiteralImages[57]);
        lengthOfMatch = jjstrLiteralImages[57].length();
                                System.out.println("Estructura");
         break;
      case 58 :
        image.append(jjstrLiteralImages[58]);
        lengthOfMatch = jjstrLiteralImages[58].length();
                             System.out.println("extends");
         break;
      case 59 :
        image.append(jjstrLiteralImages[59]);
        lengthOfMatch = jjstrLiteralImages[59].length();
                             System.out.println("Package");
         break;
      case 60 :
        image.append(jjstrLiteralImages[60]);
        lengthOfMatch = jjstrLiteralImages[60].length();
                           System.out.println("Global");
         break;
      case 61 :
        image.append(jjstrLiteralImages[61]);
        lengthOfMatch = jjstrLiteralImages[61].length();
                       System.out.println("Join");
         break;
      case 62 :
        image.append(jjstrLiteralImages[62]);
        lengthOfMatch = jjstrLiteralImages[62].length();
                       System.out.println("Lock");
         break;
      case 63 :
        image.append(jjstrLiteralImages[63]);
        lengthOfMatch = jjstrLiteralImages[63].length();
                                  System.out.println("Dllexport");
         break;
      case 64 :
        image.append(jjstrLiteralImages[64]);
        lengthOfMatch = jjstrLiteralImages[64].length();
                                   System.out.println("Dllimport");
         break;
      case 65 :
        image.append(jjstrLiteralImages[65]);
        lengthOfMatch = jjstrLiteralImages[65].length();
                            System.out.println("extern");
         break;
      case 66 :
        image.append(jjstrLiteralImages[66]);
        lengthOfMatch = jjstrLiteralImages[66].length();
                               System.out.println("noreturn");
         break;
      case 67 :
        image.append(jjstrLiteralImages[67]);
        lengthOfMatch = jjstrLiteralImages[67].length();
                     System.out.println("Def");
         break;
      case 68 :
        image.append(jjstrLiteralImages[68]);
        lengthOfMatch = jjstrLiteralImages[68].length();
                      System.out.println("Del");
         break;
      case 69 :
        image.append(jjstrLiteralImages[69]);
        lengthOfMatch = jjstrLiteralImages[69].length();
                        System.out.println("None");
         break;
      case 70 :
        image.append(jjstrLiteralImages[70]);
        lengthOfMatch = jjstrLiteralImages[70].length();
                        System.out.println("Elif");
         break;
      case 71 :
        image.append(jjstrLiteralImages[71]);
        lengthOfMatch = jjstrLiteralImages[71].length();
                              System.out.println("Nolocal");
         break;
      case 72 :
        image.append(jjstrLiteralImages[72]);
        lengthOfMatch = jjstrLiteralImages[72].length();
                            System.out.println("Equals");
         break;
      case 73 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                     System.out.println("OperadorDeConversion ( "+image+") ");
         break;
      case 74 :
        image.append(jjstrLiteralImages[74]);
        lengthOfMatch = jjstrLiteralImages[74].length();
                            System.out.println("Delete");
         break;
      case 75 :
        image.append(jjstrLiteralImages[75]);
        lengthOfMatch = jjstrLiteralImages[75].length();
                            System.out.println("Object");
         break;
      case 76 :
        image.append(jjstrLiteralImages[76]);
        lengthOfMatch = jjstrLiteralImages[76].length();
                          System.out.println("Super");
         break;
      case 77 :
        image.append(jjstrLiteralImages[77]);
        lengthOfMatch = jjstrLiteralImages[77].length();
                            System.out.println("Import");
         break;
      case 78 :
        image.append(jjstrLiteralImages[78]);
        lengthOfMatch = jjstrLiteralImages[78].length();
                                System.out.println("Strictfp");
         break;
      case 79 :
        image.append(jjstrLiteralImages[79]);
        lengthOfMatch = jjstrLiteralImages[79].length();
                      System.out.println("Var");
         break;
      case 80 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                               System.out.println("DescriptoresDeAcceso ( "+image+") ");
         break;
      case 81 :
        image.append(jjstrLiteralImages[81]);
        lengthOfMatch = jjstrLiteralImages[81].length();
                        System.out.println("Pass");
         break;
      case 82 :
        image.append(jjstrLiteralImages[82]);
        lengthOfMatch = jjstrLiteralImages[82].length();
                            System.out.println("Typeid");
         break;
      case 83 :
        image.append(jjstrLiteralImages[83]);
        lengthOfMatch = jjstrLiteralImages[83].length();
                             System.out.println("Typedef");
         break;
      case 84 :
        image.append(jjstrLiteralImages[84]);
        lengthOfMatch = jjstrLiteralImages[84].length();
                                System.out.println("Volatile");
         break;
      case 85 :
        image.append(jjstrLiteralImages[85]);
        lengthOfMatch = jjstrLiteralImages[85].length();
                         System.out.println("Print");
         break;
      case 86 :
        image.append(jjstrLiteralImages[86]);
        lengthOfMatch = jjstrLiteralImages[86].length();
                                    System.out.println("Implements");
         break;
      case 87 :
        image.append(jjstrLiteralImages[87]);
        lengthOfMatch = jjstrLiteralImages[87].length();
                          System.out.println("Fixed");
         break;
      case 88 :
        image.append(jjstrLiteralImages[88]);
        lengthOfMatch = jjstrLiteralImages[88].length();
                                    System.out.println("Instanceof");
         break;
      case 89 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                           System.out.println("EspecificadorDeAlmacenamiento ("+image+") ");
         break;
      case 90 :
        image.append(jjstrLiteralImages[90]);
        lengthOfMatch = jjstrLiteralImages[90].length();
                                               System.out.println("ModificadorAbstract");
         break;
      case 91 :
        image.append(jjstrLiteralImages[91]);
        lengthOfMatch = jjstrLiteralImages[91].length();
                                                 System.out.println("sealed");
         break;
      case 92 :
        image.append(jjstrLiteralImages[92]);
        lengthOfMatch = jjstrLiteralImages[92].length();
                                                  System.out.println("readonly");
         break;
      case 93 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                                                                             System.out.println("ManejoDeExceptiones ("+image+")");
         break;
      case 94 :
        image.append(jjstrLiteralImages[94]);
        lengthOfMatch = jjstrLiteralImages[94].length();
                       System.out.println("Main");
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

}
